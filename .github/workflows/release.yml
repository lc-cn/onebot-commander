name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Build project
      run: npm run build

    - name: Run benchmarks
      run: npm run benchmark

    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Generate changelog
      id: changelog
      run: |
        # 获取版本号
        VERSION=${GITHUB_REF#refs/tags/}
        
        # 生成 changelog
        echo "## What's Changed" > CHANGELOG_RELEASE.md
        echo "" >> CHANGELOG_RELEASE.md
        
        # 获取上一个标签
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        
        if [ -n "$PREVIOUS_TAG" ]; then
          echo "### Changes since $PREVIOUS_TAG" >> CHANGELOG_RELEASE.md
          echo "" >> CHANGELOG_RELEASE.md
          git log --pretty=format:"- %s" $PREVIOUS_TAG..HEAD >> CHANGELOG_RELEASE.md
        else
          echo "### Initial Release" >> CHANGELOG_RELEASE.md
          echo "" >> CHANGELOG_RELEASE.md
          git log --pretty=format:"- %s" >> CHANGELOG_RELEASE.md
        fi
        
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat CHANGELOG_RELEASE.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Update Release
      uses: actions/update-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}
        body: ${{ steps.changelog.outputs.changelog }}

    - name: Upload build artifacts
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/
        asset_name: onebot-commander-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip 